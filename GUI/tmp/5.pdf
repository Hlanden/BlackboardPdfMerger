% Example 2.6.3 in Chen

% Parameters:
M = 2; % [g] mass of wagon
m = 0.5; % [g] mass of pendulum
l = 1; % [m] length of pendulum
g = 9.81; % [m/s2] gravity constant

% State space equations for linearized model (around 0 angle)
A = [   0   1   0       0;
        0   0   -m*g/M  0;
        0   0   0       1;
        0   0   (M+m)*g/(M*l) 0];
B = [0; 1/M; 0; -1/(M*l)];
C = [1 0 0 0];

% Create state space object:
pend = ss(A,B,C,0);  
% Eigenvectors and eigenvalues:
[V,D] = eig(A);
% Controllability matrix:
CC = ctrb(pend); % or ctrb(A,B);
% Initial value:
x0 = [0 0 0.01 0]';
% Time span to simulate:
times = 0:0.01:10;
% Set up zero input series, since we are simulating with feedback:
u = zeros(size(times)); 


% Pole placement. P vector is set up with our desired poles:
ang = (pi/180)*[20 40];
P = 2*[
    -cos(ang(1))+sin(ang(1))*j; -cos(ang(1))-sin(ang(1))*j;
    -cos(ang(2))+sin(ang(2))*j; -cos(ang(2))-sin(ang(2))*j]

% ang = (pi/180)*[50];
% P = 2*[
%     -0.9; -1.1; 
%     -cos(ang(1))+sin(ang(1))*j; -cos(ang(1))-sin(ang(1))*j]

% Find gain matrix K:
K = place(A, B, P);

% Set up closed loop system:
A_fb = A - B*K;
pend_fb = ss(A_fb,B,C,0);  

% Simulate:
[Y,T,X] = lsim(pend_fb, u, times, x0);

% Calculate feedback values (K*x)
% At each time step of the simulation, we know that
% the feedback value has been equal to K*x, so we
% can calulate that here:
U = zeros(size(T));
for i=1:length(U)
   U(i) = K*(X(i,:)');
end

figure(11)
plstr = '-';
subplot(2,2,1), plot(T,Y,plstr,'LineWidth',2), title('Wagon position'), hold on, grid on
subplot(2,2,2), plot(T,U,plstr,'LineWidth',2), title('Input force'), hold on, grid on
subplot(2,2,3), plot(T,X(:,3),plstr,'LineWidth',2), title('Angle \theta'), hold on, grid on
subplot(2,2,4), plot(real(P), imag(P),'*'), title('Poles'), xlim([-5 5]), ylim([-5 5]), grid on
